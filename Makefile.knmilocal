# based on fortran code download from git clone http://climexp.knmi.nl/Fortran.git
# SVM_ARCH=ce 

# makefile requires a local directory to build to
# mkdir Fortran/ce
# cd Fortran/ce

# cp ../Makefile.linux_gfortran_64 .

# FFLAGS = -Ktrap=fp -g -C
###FFLAGS = -g -Dlinux -fbounds-check -fbackslash -ffpe-trap=invalid,zero,overflow

#[mihajlov@pc150396 ce]$ nc-config --fflags
#-I/usr/include
#[mihajlov@pc150396 ce]$ nc-config --includedir
#/usr/include

#change I include...
FFLAGS = -O -Dlinux -fbackslash -ffpe-trap=invalid,zero,overflow -I/usr/include
EOFFLAGS = $(FFLAGS)

CFLAGS = -O2

# change library link to include local netcdf
#nc-config --lib
#L/usr/lib64 -lnetcdf
#[mihajlov@pc150396 ce]$ nc-config --fc
#gfortran
#[mihajlov@pc150396 ce]$ nc-config --flibs
#-lnetcdff

SYSLIBS = -L/usr/lib -L/usr/lib64/ -lnetcdff -lnetcdf -lhdf5 -llapack -lblas
FC = gfortran
LD = gfortran
RANLIB = echo ready with

###LDBIGFLAG = -Wl,-Bstatic

EXTRAOBJS = getppid.o swapbyte.o

# numerical refrence funct required, download from web or...
# requires nrf.a
# mkdir nrf; cd !$
# from philippe: cp /usr/people/sager/proj/nrf/nrf.tar .
# from philippe: cp /usr/people/sager/proj/nrf/nrf.mk  .
# from philippe: cp /usr/people/sager/proj/nrf/nrf.dep .
# tar -xf nrf.tar        (download source)
# make -f nrf.mk         (build locally)
# cp libnr.a Fortran/ce  (add lib to Fortran)

# add source file, *.f or *.F
# annual2shorter.F (missing source file added )
# patternfield.F   (missing source file added )
include ../Makefile.common

# available from andrej